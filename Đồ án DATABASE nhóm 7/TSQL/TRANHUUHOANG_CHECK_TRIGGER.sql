use QL_QuanAn
go

----------------------------------CHECK-------------------------------
-- loai account trong bang account chi nhan gia tri 0 hoac 1 HOAC 2 (0 KHACH 1 NHANVIEN 2 ADMIN)
alter table account
add constraint checkTypeAcc check (type = 0 or type = 1 OR TYPE = 2)

-- gia trong bang food phai lon hon 0
alter table food
add constraint checkFoodPrice check (price > 0)
alter table bill
drop constraint checkTotalPrice
-- tong tien trong bang bill phai lon hon 0
alter table bill
add constraint checkTotalPrice check (totalPrice > 0)
-- giam gia trong ban bill phai lon hon 0 va be hon 50
ALTER TABLE BILL
ADD CONSTRAINT CHECKDISCOUNT CHECK(DISCOUNT >=0 AND DISCOUNT <= 50)

-- so luong trong bill info phai lon hon 0
ALTER TABLE BILLINFO 
ADD CONSTRAINT CHECKCOUNT CHECK(COUNT > 0)
----------------------------------TRIGGER-------------------------------
-- khi tạo bill cập nhập phòng của bill đó thành 'có người'
GO
CREATE TRIGGER TG_DATBAN
ON BILL
FOR INSERT
AS
BEGIN
	DECLARE @IDROOM INT
	SET @IDROOM = (SELECT IDROOM FROM inserted)
	IF EXISTS (SELECT * FROM ROOM  WHERE ID = @IDROOM AND status = N'có người')
	BEGIN
		PRINT N'BÀN NÀY ĐANG ĐƯỢC ĐẠT'
		ROLLBACK TRAN
	END
	ELSE
	BEGIN
		UPDATE Room
		SET status = N'có người'
		WHERE ID = @IDROOM
		PRINT N'ĐẠT BÀN THÀNH CÔNG'
	END
END
---------------------------

-- KHI CẬP NHẬT TRẠNG THÁI CỦA BILL LÀ ĐÃ TRẢ (STATUS = 1) CẬP NHẬT BÀN ĂN CỦA BILL ĐÓ THÀNH 'TRỐNG'
-- ĐỒNG THỜI GAN DATECHECKOUT 
GO
CREATE TRIGGER TG_TRABAN
ON BILL
FOR UPDATE 
AS
BEGIN
	DECLARE @IDROOM INT
	DECLARE @IDBILL INT
	SET @IDBILL = (SELECT ID FROM inserted)
	SET @IDROOM = (SELECT idRoom FROM inserted)
	IF(SELECT STATUS FROM inserted) = 1
	BEGIN
		UPDATE ROOM
		SET status = N'trống'
		WHERE ID = @IDROOM
		PRINT N'TRẢ BÀN THÀNH CÔNG'
		UPDATE BILL
		SET dateCheckOut = GETDATE()
		WHERE ID = @IDBILL
	END
END
---------------------------


-- khi thêm thức ăn cập nhật tổng tiền cho bill đó 
GO
CREATE TRIGGER TG_CAPNHATTONGTIEN
ON BILLINFO
AFTER INSERT, UPDATE
AS
BEGIN
	DECLARE @IDBILL INT
	DECLARE @TIENAN FLOAT
	DECLARE @TIENPHONG FLOAT
	SET @IDBILL = (SELECT IDBILL FROM INSERTED)
	EXEC USP_TINHROOMFE @IDBILL
	SET @TIENPHONG = (SELECT ROOMFE FROM BILL WHERE ID = @IDBILL)
	SET @TIENAN = (SELECT SUM(PRICE * COUNT ) FROM FOOD, BILLINFO, bill WHERE IDFOOD = FOOD.ID AND BILL.ID = IDBILL AND BILL.ID = @IDBILL)
	IF(@TIENAN IS NULL)
		SET @TIENAN = 0
	UPDATE BILL
	SET totalPrice = (@TIENAN + @TIENPHONG)
	WHERE ID = @IDBILL
END

---------------------------

-- TẠO TÀI KHOẢN LOGIN  MỚI TRUYỀN VÀO TÊN ĐĂNG NHẬP VÀ MẬT KHẨU
CREATE PROC USP_TAODANGNHAP (@TAIKHOAN VARCHAR(20), @MATKHAU VARCHAR(20))
AS
BEGIN

	DECLARE @MK VARCHAR(20)
	SET @MK = ''''+@MATKHAU+''''
	DECLARE @QUERY VARCHAR(MAX)
	SET @QUERY = 'CREATE LOGIN ' + @TAIKHOAN + ' WITH PASSWORD =' + @MK
	EXEC(@QUERY)
END
GO


-- TẠO USER MỚI TRUYỀN VÀO TÊN TÀI KHOẢN ĐĂNG NHẬP
ALTER PROC USP_TAONGUOIDUNG (@TAIKHOAN VARCHAR(20))
AS
BEGIN

	DECLARE @QUERY VARCHAR(MAX)
	SET @QUERY = 'CREATE USER ' + @TAIKHOAN + ' FOR LOGIN ' +@TAIKHOAN + ' WITH DEFAULT_SCHEMA = '+ @TAIKHOAN
	--PRINT(@QUERY)
	EXEC(@QUERY)
END
GO

EXEC USP_TAONGUOIDUNG 'HOANGTRAN'

-- khi tạo tài khoản mới tạo login và user tương ứng
drop trigger TG_TAOTAIKHOAN
go
ALTER TRIGGER TG_TAOTAIKHOAN
ON ACCOUNT
FOR INSERT
AS
BEGIN
	DECLARE @TAIKHOAN VARCHAR(20)
	DECLARE @MATKHAU VARCHAR(20)
	DECLARE @TYPE INT
	DECLARE @ID INT
	SET @TAIKHOAN = (SELECT userName FROM INSERTED)
	SET @MATKHAU = (SELECT password FROM INSERTED)
	SET @TYPE = (SELECT TYPE FROM INSERTED)
	SET @ID = (SELECT COUNT(*) FROM account WHERE userName = @TAIKHOAN)
	IF @ID > 1
	BEGIN
		PRINT(@ID)
		PRINT 'TAI KHOAN NAY DA TON TAI'
		ROLLBACK TRAN
	END
	ELSE
	BEGIN
		--TAO LOGIN
		EXEC USP_TAODANGNHAP @TAIKHOAN, @MATKHAU
		EXEC USP_TAONGUOIDUNG @TAIKHOAN
		-- THEM TAI KHOAN VAO NHOM QUYEN TUONG UNG
		DECLARE @QUERY VARCHAR(MAX)
		IF(@TYPE = 2)
			SET @QUERY = 'ALTER server ROLE [sysadmin] ADD MEMBER [' + @TAIKHOAN +']' 
		ELSE IF(@TYPE = 1)
			SET @QUERY = 'ALTER ROLE [R_NHANVIEN] ADD MEMBER [' + @TAIKHOAN +']' 
		ELSE
			SET @QUERY = 'ALTER ROLE [XEMTHONGTIN] ADD MEMBER [' + @TAIKHOAN +']' 
		EXEC(@QUERY)
	END
END
GO


-- XOA TAI KHOAN
CREATE TRIGGER TG_XOAACCOUNT 
ON ACCOUNT
FOR DELETE
AS
BEGIN
	DECLARE @TAIKHOAN VARCHAR(20)
	SET @TAIKHOAN = (SELECT USERNAME FROM DELETED)
	-- XOA USER
	DECLARE @QUERY NVARCHAR(MAX)
	SET @QUERY = 'DROP USER ' +@TAIKHOAN
	EXEC(@QUERY)
	-- XOA LOGIN 
	DECLARE @QUERY2 NVARCHAR(MAX)
	SET @QUERY2 = 'DROP LOGIN ' +@TAIKHOAN
	EXEC(@QUERY2)
END
GO


ALTER PROC USP_XOATAIKHOAN @ID INT
AS
BEGIN
	DELETE FROM ACCOUNT WHERE ID = @ID;
END
GO
----------------------------------PROCEDURE-------------------------------
----------------------------------ACCOUNT-------------------------------
-- LẤY TOÀN BỘ BẢNG ACCOUNT
CREATE PROC USP_LAYACCOUNT
AS
BEGIN
	SELECT * FROM ACCOUNT
END
GO
-- LẤY ACCOUNT THEO ID
CREATE PROC USP_LAYACCOUNTBYID @ID INT
AS
BEGIN
	SELECT * FROM ACCOUNT WHERE ID = @ID
END
GO

-- TIM KIEM TAI KHOAN THEO TEN
CREATE PROC USP_TIMACCOUNT @TEN NVARCHAR(20)
AS
BEGIN
	SELECT * FROM ACCOUNT WHERE DISPLAYNAME LIKE '%' + @TEN + '%'
END
GO
-- TIM KIEM TAI KHOAN THEO TEN
CREATE PROC USP_TIMACCOUNTU @TEN NVARCHAR(20)
AS
BEGIN
	SELECT * FROM ACCOUNT WHERE userName = @TEN
END
GO
-- THEM TAI KHOAN
CREATE PROC USP_TAOACCOUNT @TAIKHOAN VARCHAR(20), @MATKHAU VARCHAR(20), @TYPE INT
AS
BEGIN
	insert into account(displayName, userName, password, type)
	values (@TAIKHOAN, @TAIKHOAN, @MATKHAU, @TYPE)
END
GO
-- SUA TAI KHOAN
-- XOA TAI KHOAN
CREATE PROC USP_XOAACCOUNT @ID INT
AS
BEGIN
	EXEC USP_XOATAIKHOAN @ID
END
GO
----------------------------------BILL-------------------------------
-- LẤY TOÀN BỘ BẢNG BILL
CREATE PROC USP_LAYBILL
AS
BEGIN
	SELECT * FROM BILL
END
GO
--	LẤY BILL CHƯA THANH TOÁN CỦA PHÒNG CÓ ID PHÒNG TRUYỀN VÀO
CREATE PROC USP_LAYBILLCHUATHANHTOAN @IDROOM INT
AS
BEGIN
	SELECT * FROM BILL WHERE IDROOM = @IDROOM AND STATUS = 0
END
GO
------------
EXEC USP_LAYBILLCHUATHANHTOAN 3

-- LẤY BILL THEO ID BILL
CREATE PROC USP_LAYBILLTHEOID @ID INT
AS
BEGIN
	SELECT * FROM BILL WHERE ID = @ID
END
GO
-- THEM BILL
----------------------------------BILL-INFO-------------------------------
-- LẤY TOÀN BỘ BILLINFO
CREATE PROC USP_LAYBILLINFO 
AS
BEGIN
	SELECT * FROM BILLINFO
END
GO

-- LẤY BILLINFO THEO IDBILL
CREATE PROC USP_LAYBILLINFOTHEOBILL @IDBILL INT
AS
BEGIN
	SELECT * FROM BILLINFO WHERE IDBILL = @IDBILL
END
GO
-- LẤY BILLINFOITEM THEO IDBILL
CREATE PROC USP_LAYBILLINFOITEM @IDBILL INT
AS
BEGIN
	SELECT FOOD.NAME, FOOD.PRICE, BILLINFO.COUNT, (FOOD.PRICE * BILLINFO.COUNT) AS TOTAL FROM BILLINFO, FOOD WHERE IDBILL = @IDBILL AND FOOD.ID = BILLINFO.IDFOOD
END
GO

----------------------------------FOOD-------------------------------
-- LẤY TOÀN BỘ FOOD 
CREATE PROC USP_LAYFOOD
AS
BEGIN
	SELECT * FROM FOOD
END
GO

CREATE PROC USP_LAYFOODTHEOID @ID INT
AS
BEGIN
	SELECT * FROM FOOD WHERE ID = @ID
END
GO

-- TIM THUC AN THEO TEN
CREATE PROC USP_TIMFOOD @TEN NVARCHAR(20)
AS
BEGIN
	SELECT * FROM FOOD WHERE NAME LIKE '%' + @TEN + '%'
END
GO
-- LẤY FOOD THEO IDCATEGORY
CREATE PROC USP_LAYFOODTHEOIDCATE @IDCATE INT
AS
BEGIN
	SELECT * FROM FOOD WHERE IDCATEGORY = @IDCATE
END
GO

-- THEM MON
CREATE PROC USP_THEMFOOD @NAME NVARCHAR(50), @IDCATE INT, @PRICE FLOAT
AS
BEGIN
	insert into food(name, idCategory, price)
	values (@NAME,@IDCATE, @PRICE)
END
GO

-- SUA MON
CREATE PROC USP_SUAfOOD @ID INT, @NAME NVARCHAR(50), @IDCATE INT, @PRICE FLOAT
AS
BEGIN
	UPDATE FOOD
	SET NAME = @NAME, IDCATEGORY = @IDCATE, PRICE = @PRICE
	WHERE ID = @ID
END
GO
-- XOA MON
CREATE PROC USP_XOAFOOD @ID INT
AS
BEGIN
	IF EXISTS (SELECT * FROM BILLINFO WHERE IDFOOD = @ID)
	BEGIN
		UPDATE FOOD
		SET ISDELETE = 1
		WHERE ID = @ID
	END
	ELSE
	BEGIN
		DELETE FROM FOOD WHERE ID = @ID;
	END
END
GO



----------------------------------FOOD_CATEGORY-------------------------------
-- LẤY TOÀN BỘ FOOD CATEGORY
CREATE PROC USP_LAYFOODCATEGORY
AS
BEGIN
	SELECT * FROM FOODCATEGORY
END
GO

CREATE PROC USP_LAYFOODCATETHEOID @ID  INT
AS
BEGIN
	SELECT * FROM FOODCATEGORY WHERE ID = @ID
END
GO

CREATE PROC USP_TIMFOODCATE @TEN NVARCHAR(20)
AS
BEGIN
	SELECT * FROM FOODCATEGORY WHERE NAME LIKE '%' + @TEN + '%'
END
GO

-- THEM DANH MUC
CREATE PROC USP_THEMCATEGORY @NAME NVARCHAR(50)
AS
BEGIN
	insert into FOODCATEGORY(name)
	values (@NAME)
END
GO
-- SUA DANH MUC
CREATE PROC USP_SUACATEGORY @ID INT, @NAME NVARCHAR(50)
AS
BEGIN
	UPDATE FOODCATEGORY
	SET NAME = @NAME
	WHERE ID = @ID
END
GO
-- XOA DANH MUC
CREATE PROC USP_XOACATEGORY @ID INT
AS
BEGIN
	IF EXISTS (SELECT * FROM FOOD WHERE IDCATEGORY = @ID)
	BEGIN
		UPDATE FOODCATEGORY
		SET ISDELETE = 1
		WHERE ID = @ID
	END
	ELSE
	BEGIN
		DELETE FROM FOODCATEGORY WHERE ID = @ID;
	END
END
GO
----------------------------------ROOM-------------------------------
-- LẤY TOÀN BỘ ROOM
CREATE PROC USP_LAYROOM
AS
BEGIN
	SELECT * FROM ROOM
END
GO

CREATE PROC USP_LAYROOMTHEOID @ID INT
AS
BEGIN
	SELECT * FROM ROOM WHERE ID = @ID
END
GO

CREATE PROC USP_TIMROOM @TEN NVARCHAR(20)
AS
BEGIN
	SELECT * FROM ROOM WHERE NAME LIKE '%' + @TEN + '%'
END
GO

-- THÊM PHÒNG
CREATE PROC USP_THEMROOM @NAME NVARCHAR(50), @PRICE FLOAT
AS
BEGIN
	insert into ROOM(name, PRICE)
	values (@NAME, @PRICE)
END
GO
-- XÓA PHÒNG
CREATE PROC USP_SUAROOM @ID INT, @NAME NVARCHAR(50), @PRICE FLOAT
AS
BEGIN
	UPDATE ROOM
	SET NAME = @NAME, PRICE = @PRICE
	WHERE ID = @ID
END
GO
-- SỦA PHÒNG
CREATE PROC USP_XOAROOM @ID INT
AS
BEGIN
	IF EXISTS (SELECT * FROM BILL WHERE IDROOM = @ID)
	BEGIN
		UPDATE ROOM
		SET ISDELETE = 1
		WHERE ID = @ID
	END
	ELSE
	BEGIN
		DELETE FROM ROOM WHERE ID = @ID;
	END
END
GO
----------------------------------TINH-NANG-------------------------------
-- thanh toán billstatus = 1
CREATE PROC USP_TRAPHONG @ID INT
AS
BEGIN
	UPDATE BILL
	SET STATUS = 1
	WHERE ID = @ID
END

-- TÍNH TIỀN PHÒNG 
CREATE PROC USP_TINHROOMFE @IDBILL INT
AS
BEGIN
	DECLARE @GIA FLOAT
	DECLARE @THOILUONG INT
	DECLARE @TIENPHONG FLOAT
	DECLARE @IN DATETIME
	DECLARE @OUT DATETIME
	SET @IN = (SELECT DATECHECKIN FROM BILL WHERE ID = @IDBILL)
	SET @OUT = (SELECT DATECHECKOUT FROM BILL WHERE ID = @IDBILL)
	IF @OUT IS NULL
		SET @OUT = GETDATE()
	SET @GIA = (SELECT PRICE FROM ROOM, BILL WHERE ROOM.ID = BILL.IDROOM AND BILL.ID = @IDBILL)
	SET @THOILUONG = (DATEDIFF(minute, @IN, @OUT))
	SET @TIENPHONG = @GIA * @THOILUONG
	UPDATE BILL
	SET ROOMFE = @TIENPHONG
	WHERE ID = @IDBILL
END
GO
-----------------------------------------------------------------
-- TÍNH TỐNG TIỀN 
CREATE PROC USP_TINHTOTALPRICE @IDBILL INT
AS
BEGIN
	DECLARE @TIENAN FLOAT
	DECLARE @TIENPHONG FLOAT
	SET @TIENPHONG = (SELECT ROOMFE FROM BILL WHERE ID = @IDBILL)
	SET @TIENAN = (SELECT SUM(PRICE * COUNT ) FROM FOOD, BILLINFO, bill WHERE IDFOOD = FOOD.ID AND BILL.ID = IDBILL AND BILL.ID = @IDBILL)
	IF(@TIENAN IS NULL)
		SET @TIENAN = 0
	UPDATE BILL
	SET totalPrice = (@TIENAN + @TIENPHONG)
	WHERE ID = @IDBILL
END

-- cập nhật discount
CREATE PROC USP_CAPNHATDISCOUNT @IDBILL INT, @DISCOUNT INT
AS
BEGIN
	UPDATE BILL
	SET discount = @DISCOUNT
	WHERE ID = @IDBILL
END
GO

-- gọi món
CREATE PROC USP_GOIMON @IDBILL INT, @IDFOOD INT, @COUNT INT
AS
BEGIN
	IF EXISTS (SELECT * FROM BILLINFO WHERE IDBILL = @IDBILL AND IDFOOD = @IDFOOD)
	BEGIN
		UPDATE BILLINFO
		SET COUNT = COUNT + @COUNT
		WHERE ID = (SELECT ID FROM BILLINFO WHERE IDBILL = @IDBILL AND IDFOOD = @IDFOOD)
	END
	ELSE
	BEGIN
		INSERT INTO BILLINFO
		VALUES (@IDBILL, @IDFOOD, @COUNT)
	END
END


---------------------------------------------------------------------proc---------------------------------
create function F_LOCBILL (@start datetime, @end datetime)
returns table
as
	return select * from bill where dateCheckIn >= @start and dateCheckIn <= @end


CREATE PROC USP_LOCBILL @START DATETIME, @END DATETIME
AS
BEGIN
	select * from F_LOCBILL(@START, @END)
END

EXEC USP_LOCBILL '2022-12-23 08:06:26.947', '2022-12-27 13:23:42.213'

create function F_TINHTONGTIEN (@start datetime, @end datetime)
returns float
as
begin
	declare @tongtien float
	set @tongtien = (select sum(totalprice) from bill where dateCheckIn >= @start and dateCheckIn <= @end)
	return @tongtien
end

declare @to float
set @to = ( dbo.F_TINHTONGTIEN('2022-12-23 08:06:26.947', '2022-12-27 13:23:42.213'))
print(@to)